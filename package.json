{
  "name": "design-pattern",
  "version": "1.0.0",
  "description": "- 애플리케이션에서 달라지는 부분을 찾아내고, 달라지지 않는 부분과 분리한다.\r - 구현보다는 인터페이스에 맞춰서 프로그래밍한다.\r - 상속보다는 구성을 활용한다.\r - 상호작용하는 객체 사이에는 가능하면 느슨한 결합을 사용해야 한다.\r - 클래스는 확장에는 열려 있어야 하지만 변경에는 닫혀 있어야 한다.\r - 추상화된 것에 의존하게 만들고 구상 클래스에 의존하지 않게 만든다.\r - 진짜 절친에게만 이야기해야 한다.\r - 먼저 연락하지 마세요. 저희가 연락 드리겠습니다.\r - 어떤 클래스가 바뀌는 이뉴는 하나뿐이어야 한다.",
  "main": "index.js",
  "type": "module",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ssj9685/design-pattern.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/ssj9685/design-pattern/issues"
  },
  "homepage": "https://github.com/ssj9685/design-pattern#readme",
  "dependencies": {
    "multi-inherit": "^1.0.1"
  }
}
